// ------------- FILE HEADER -------------
// Author: Adam Marquess
// Assignment: Assignment 4 phrase comparitor
// Date: 7/20/25
// Description: compare two phrases
// Sources: 


// ------------- ZYBOOKS SCORES -------------
// https://learn.zybooks.com/zybook/PCCCS161ASummer25
// Chapter: 4
// Participation: 98%
// Challenge: 100%
// Labs: 100%


// ------------- DISCORD POSTS -------------
// https://discord.com/invite/URYKKf8YHm
// Count:1
// Links (Optional): 


// ------------- DESIGN DOCUMENT -------------
// A. INPUT [yes/no]:  yes
// B. OUTPUT [yes/no]: yes
// C. CALCULATIONS [yes/no]: compare
// D. LOGIC and ALGORITHMS [yes/no]: compare if/else
//    (Optional) flow chart link or file name: 


// ------------- TESTING -------------
// PASS ALL GIVEN SAMPLE RUN TESTS [yes/no]: yes
// (Optional) Additional tests count:   


// ------------- CODE -------------
#include <iostream>
#include <string>
using namespace std;
int main() {
  
  
       string phrase1;
       string phrase2;
  

    // Welcome message
   cout << "Welcome to the Phrase Comparison Program!" << std::endl;

    
    cout << "Enter the first phrase: ";
    getline(cin, phrase1);
    cout << "You entered: " << phrase1 << std::endl;

  
    cout << "Enter the second phrase: ";
    getline (cin, phrase2);
    cout << "You entered: " << phrase2 << std::endl;

    
    if (phrase1 == phrase2) {
        cout << "Both phrases match." << std::endl;
    } else {
        size_t found1 = phrase2.find(phrase1); 
        size_t found2 = phrase1.find(phrase2); 

        if (found1 != string::npos) {
            cout << "Phrase 1 is found within phrase 2." << endl;
            cout << phrase2.substr(found1) << endl;
        }
        else if (found2 != string::npos) {
            cout << "Phrase 2 is found within phrase 1." << endl;
            cout << phrase1.substr(found2) << std::endl;
        }
        else {
            cout << "No matches." << endl;
        }
    }

    // Thank you message
    std::cout << "Thank you for using the Phrase Comparison Program!" << endl;

return 0;
}



// ------------- DESIGN -------------
/* 
Program Name:
Phrase comparing progrm
Program Description:
 With two seperate phrase compare if they are the same, different, or contain the same phrases inside each other
Design:
A. INPUT
Define the input variables including name data type. 

string: phrase 1 and Phrase 2 

B. OUTPUT
Define the output variables including data types. 

output string responses of whether or not the phrases match 

C. CALCULATIONS
Describe calculations used by algorithms in step D.  
List all formulas. 
If there are no calculations needed, state there are no calculations.

no calculations as far as plus minus arithmatic, but find,  replace, and if-else 

D. LOGIC and ALGORITHMS
Design the logic of your program using pseudocode or flowcharts. 
Use conditionals, loops, functions or array constructs.
List the steps in transforming inputs into outputs. 
https://github.com/Glen-Sasek-PCC-Instructor/2025-06-22/blob/main/Pseudocode-Reference.txt

if-else statements to compare the two phrases
define string phrases 1 and 2. 
input phrases 
<find> phrases inside each other 
if-else to see if phrases match else they do not match
cout - welcome and goodbye messages 



SAMPLE RUNS
Copy from assignment document.

*/
